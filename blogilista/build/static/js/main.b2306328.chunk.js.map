{"version":3,"sources":["reducers/toneReducer.js","reducers/notificationReducer.js","components/Blog.js","reducers/loginReducer.js","services/login.js","services/blogs.js","components/LoginForm.js","components/Notification.js","components/CreateBlogForm.js","components/Togglable.js","App.js","reducers/currentUserReducer.js","store.js","index.js"],"names":["toneReducer","state","action","console","log","type","addNotification","notification","dispatch","a","dropNotification","notificationReducer","Blog","blog","changeBlog","removeBlog","loggedUsername","useState","visible","setVisible","showWhenVisible","display","hideWhenVisible","toggleVisibility","user","username","removeButtonStyle","background","color","id","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","onClick","author","url","likes","changedBlog","window","confirm","loginReducer","password","login","credentials","axios","post","response","data","baseUrl","token","getAll","config","headers","Authorization","get","then","create","newBlog","setToken","newToken","change","put","remove","delete","LoginForm","useDispatch","useSelector","handleLogin","event","preventDefault","loginService","localStorage","setItem","JSON","stringify","blogService","setTimeout","onSubmit","value","name","onChange","target","addUsername","addPassword","Notification","tone","CreateBlogForm","createBlog","setTitle","setAuthor","setUrl","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","setUser","useEffect","loggedUserJSON","getItem","parse","blogObject","blogFormRef","current","returnedBlog","concat","map","b","filter","useRef","removeItem","sort","currentUserReducer","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2306328.chunk.js","sourcesContent":["\r\nconst toneReducer = (state = 'pos', action) => {\r\n  console.log('the tone state is:')\r\n  console.log(state)\r\n  switch(action.type) {\r\n  case 'POS_TONE':\r\n    return 'pos'\r\n  case 'NEG_TONE':\r\n    return 'neg'\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const changeToneToPos = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'POS_TONE'\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeToneToNeg = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEG_TONE'\r\n    })\r\n  }\r\n}\r\n\r\nexport default toneReducer","\r\nconst notificationReducer = (state = '', action) => {\r\n  console.log('the notification state is:')\r\n  console.log(state)\r\n  console.log(action.notification)\r\n  switch(action.type) {\r\n  case 'ADD_NOTIFICATION':\r\n    return action.notification\r\n  case 'DROP_NOTIFICATION':\r\n    return ''\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addNotification = (notification) => {\r\n  console.log('notification to be added')\r\n  console.log(notification)\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'ADD_NOTIFICATION',\r\n      notification: notification\r\n    })\r\n  }\r\n}\r\n\r\nexport const dropNotification = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'DROP_NOTIFICATION'\r\n    })\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import React, { useState } from 'react'\r\n\r\n\r\nconst Blog = ({ blog, changeBlog, removeBlog, loggedUsername }) => {\r\n  const [visible, setVisible] = useState('')\r\n\r\n  const showWhenVisible = { display: visible ? 'none' : '' }\r\n  const hideWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const addLike = () => {\r\n    //const changedBlog = { ...blog, likes: blog.likes + 1 }\r\n    const changedBlog = {\r\n      user: blog.user.id,\r\n      likes: blog.likes + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url,\r\n    }\r\n    changeBlog(changedBlog, blog.id)\r\n    console.log(changedBlog)\r\n  }\r\n\r\n  const dropBlog = () => {\r\n    window.confirm(`Remove blog \"${blog.title}\" by ${blog.author}?`)\r\n      && removeBlog(blog.id)\r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  console.log('Käyttäjät BLOGissa')\r\n  console.log(blog)\r\n  console.log(blog.user)\r\n  console.log(blog.user.username)\r\n  console.log(loggedUsername)\r\n  const removeButtonStyle = {\r\n    background: 'blue',\r\n    color: 'white',\r\n    display: blog.user.username === loggedUsername ? '' : 'none'\r\n  }\r\n\r\n  return (\r\n    <li id='blog-info' style={blogStyle}>\r\n      <table style={showWhenVisible} className='defaultView'>\r\n        <tr>\r\n          {blog.title} <button onClick={toggleVisibility}>view</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.author}\r\n        </tr>\r\n      </table>\r\n      <table style={hideWhenVisible} className='allView'>\r\n        <tr>\r\n          {blog.title} <button onClick={toggleVisibility}>view</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.url}\r\n        </tr>\r\n        <tr>\r\n          {blog.likes} <button id='like-button' onClick={addLike}>like</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.author}\r\n        </tr>\r\n        <tr>\r\n          <button onClick={dropBlog} style={removeButtonStyle}>remove</button>\r\n        </tr>\r\n      </table>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Blog","const loginReducer = (state={}, action) => {\r\n  switch(action.type) {\r\n  case 'ADD_PASSWORD':\r\n    return  { ...state, password: action.password }\r\n  case 'ADD_USERNAME':\r\n    return { ...state, username: action.username }\r\n  case 'RESET_CREDENTIALS':\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addPassword = (password) => {\r\n  return ({\r\n    type: 'ADD_PASSWORD',\r\n    password\r\n  })\r\n}\r\n\r\nexport const addUsername = (username) => {\r\n  return ({\r\n    type: 'ADD_USERNAME',\r\n    username\r\n  })\r\n}\r\n\r\nexport const resetCredentials = () => {\r\n  return {\r\n    type: 'RESET CREDENTIALS'\r\n  }\r\n}\r\n\r\nexport default loginReducer","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  console.log('BODY IS HERE')\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = axios.get(baseUrl, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst change = async (newBlog, id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  console.log(newBlog)\r\n\r\n  const response = await axios.put(`${baseUrl}/${id}`, newBlog, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n}\r\n\r\nexport default { getAll, create, setToken, change, remove }","import React from 'react'\r\nimport { addUsername, addPassword, resetCredentials } from '../reducers/loginReducer'\r\nimport { changeToneToNeg } from '../reducers/toneReducer'\r\nimport { addNotification, dropNotification } from '../reducers/notificationReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n  const username = useSelector(state => state.credentials.username)\r\n  const password = useSelector(state => state.credentials.password)\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log(`logging in with ${username} ${password}`)\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      console.log('UUUUSERI')\r\n      console.log(user)\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser',\r\n        JSON.stringify(user)\r\n      )\r\n\r\n      blogService.setToken(user.token)\r\n      console.log('tokenin asetus onnistuu')\r\n      console.log('kaikki onnistuu')\r\n      dispatch(resetCredentials(''))\r\n    } catch (exception) {\r\n      console.log(exception)\r\n      console.log('missing or invalid credentials')\r\n      dispatch(changeToneToNeg())\r\n      dispatch(addNotification('missing or invalid credentials'))\r\n      setTimeout(()  => {\r\n        dispatch(dropNotification(''))\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login to application</h2>\r\n      <form id={'login-form'} onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => dispatch(addUsername(target.value))}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Username\"\r\n            onChange={({ target }) => dispatch(addPassword(target.value))}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  console.log('in notification comp')\r\n  const notification = useSelector(state => state.notification)\r\n  const tone = useSelector(state => state.tone)\r\n\r\n  console.log(notification)\r\n  console.log(tone)\r\n\r\n  const visibility = notification !== ''\r\n    ? ''\r\n    : 'none'\r\n\r\n  const color = tone === 'pos'\r\n    ? 'green'\r\n    : 'red'\r\n\r\n  const style = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    display: visibility\r\n  }\r\n\r\n  return (\r\n    <h2 style={style}>\r\n      {notification}\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\n\r\n\r\nconst CreateBlogForm = ({ createBlog }) => {\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n\r\n    createBlog({\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    })\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={addBlog} id='createBlogForm'>\r\n        <div>\r\n          title\r\n          <input\r\n            id=\"title\"\r\n            value={title}\r\n            name=\"title\"\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            id=\"author\"\r\n            value={author}\r\n            name=\"author\"\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url\r\n          <input\r\n            id=\"url\"\r\n            value={url}\r\n            name=\"url\"\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button id='create-button' type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateBlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showWhenVisible = { display: visible ? 'none' : '' }\r\n  const hideWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return { toggleVisibility }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeToneToPos } from './reducers/toneReducer'\r\nimport { addNotification, dropNotification } from './reducers/notificationReducer'\r\nimport Blog from './components/Blog'\r\n//import BlogForm from './components/BlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport CreateBlogForm from './components/CreateBlogForm'\r\n\r\nimport blogService from './services/blogs'\r\nimport Togglable from './components/Togglable'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [user, setUser] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      console.log('tämä tulostuu')\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleLogOut = (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    setUser(null)\r\n  }\r\n\r\n  const createBlog = async (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    /*\r\n    const blogObject = {\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    }\r\n    */\r\n    console.log('LISÄTTÄVÄ BLOGI')\r\n    console.log(blogObject)\r\n    const returnedBlog = await blogService.create(blogObject)\r\n    console.log('returned blogi')\r\n    console.log(returnedBlog)\r\n    setBlogs(blogs.concat(returnedBlog))\r\n\r\n    dispatch(changeToneToPos())\r\n    dispatch(addNotification(`A new blog \"${returnedBlog.title}\" added`))\r\n    setTimeout(() => {\r\n      dispatch(dropNotification())\r\n    }, 5000)\r\n  }\r\n\r\n  const changeBlog = async (blogObject, id) => {\r\n    const returnedBlog = await blogService.change(blogObject, id)\r\n\r\n    setBlogs(\r\n      blogs\r\n        .map(b => (\r\n          b.id !== returnedBlog.id ? b : returnedBlog\r\n        )))\r\n  }\r\n\r\n  const removeBlog = async (id) => {\r\n    await blogService.remove(id)\r\n\r\n    setBlogs(\r\n      blogs\r\n        .filter(b => (\r\n          b.id !== id\r\n        )))\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel='Login'>\r\n      <LoginForm />\r\n    </Togglable>\r\n  )\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  const createBlogForm = () => (\r\n    <Togglable buttonLabel='New blog' ref={blogFormRef}>\r\n      <CreateBlogForm\r\n        createBlog={createBlog}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>BlogApp</h1>\r\n      <Notification />\r\n      {user === null\r\n        ? loginForm()\r\n        : <div>\r\n          <p>\r\n            {user.name} is logged in\r\n            <button onClick={handleLogOut}>\r\n              Log out\r\n            </button>\r\n          </p>\r\n          <div>\r\n            <h2>blogs</h2>\r\n            {createBlogForm()}\r\n            <ul>\r\n              {blogs\r\n                .sort((a, b) => (\r\n                  b.likes - a.likes\r\n                ))\r\n                .map(blog =>\r\n                  <Blog\r\n                    key={blog.id}\r\n                    blog={blog}\r\n                    changeBlog={changeBlog}\r\n                    removeBlog={removeBlog}\r\n                    loggedUsername={user.user}/>\r\n                )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n/*\r\n<BlogForm\r\n          addBlog={addBlog}\r\n          newBlog={newBlog}\r\n          handleBlogChange={handleBlogChange}\r\n        />\r\n        */","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nconst currentUserReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n  case 'ADD_USER':\r\n    return action.user\r\n  case 'REMOVE_USER':\r\n    return {}\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addUser = (username, password) => {\r\n  return async dispatch => {\r\n    const user = await loginService(username, password)\r\n    blogService.setToken(user.token)\r\n    return dispatch(user)\r\n  }\r\n}\r\n\r\nexport default currentUserReducer","import { createStore, applyMiddleware, combineReducers  } from 'redux'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport toneReducer from './reducers/toneReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport currentUserReducer from './reducers/currentUserReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  tone: toneReducer,\r\n  credentials: loginReducer,\r\n  user: currentUserReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM\r\n  .render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,document.getElementById('root')\r\n  )"],"sourceRoot":""}