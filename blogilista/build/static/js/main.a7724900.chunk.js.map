{"version":3,"sources":["services/blogs.js","reducers/toneReducer.js","reducers/notificationReducer.js","reducers/blogReducer.js","services/login.js","reducers/currentUserReducer.js","components/Blogs.js","reducers/loginReducer.js","components/LoginForm.js","components/Notification.js","components/CreateBlogForm.js","components/Togglable.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","config","headers","Authorization","axios","get","then","response","data","create","newBlog","a","post","console","log","setToken","newToken","change","id","put","remove","delete","toneReducer","state","action","type","addNotification","notification","dispatch","dropNotification","notificationReducer","addBlog","blogObject","blogService","title","setTimeout","blogReducer","concat","filter","b","map","changedBlog","login","credentials","loginUser","loginService","user","window","localStorage","setItem","JSON","stringify","currentUserReducer","Blog","blog","loggedUser","useSelector","useState","visible","setVisible","showWhenVisible","display","hideWhenVisible","useDispatch","toggleVisibility","username","name","removeButtonStyle","background","color","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","onClick","author","url","likes","changeBlog","confirm","Blogs","blogs","sort","loginReducer","password","LoginForm","handleLogin","event","preventDefault","exception","onSubmit","value","onChange","target","addUsername","addPassword","Notification","tone","CreateBlogForm","setTitle","setAuthor","setUrl","createBlog","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","App","useEffect","loggedUserJSON","getItem","parse","addLoggedUser","blogFormRef","useRef","removeItem","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"4OACMA,EAAU,aAEZC,EAAQ,KAoDG,GAAEC,OA9CF,WAEb,IAAMC,EAAS,CACbC,QAAS,CAAEC,cAAeJ,IAI5B,OADgBK,IAAMC,IAAIP,EAASG,GACpBK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAuClBC,OApCb,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPV,EAAS,CACbC,QAAS,CAAEC,cAAeJ,IAFf,SAKUK,IAAMQ,KAAKd,EAASY,EAAST,GALvC,cAKPM,EALO,OAMbM,QAAQC,IAAI,qBACZD,QAAQC,IAAIP,GACZM,QAAQC,IAAIP,EAASC,MARR,kBASND,EAASC,MATH,2CAAH,sDAoCqBO,SAlDhB,SAAAC,GACfjB,EAAK,iBAAaiB,IAiDuBC,OAxB/B,uCAAG,WAAOP,EAASQ,GAAhB,iBAAAP,EAAA,6DACPV,EAAS,CACbC,QAAS,CAAEC,cAAeJ,IAG5Bc,QAAQC,IAAIJ,GALC,SAOUN,IAAMe,IAAN,UAAarB,EAAb,YAAwBoB,GAAMR,EAAST,GAPjD,cAOPM,EAPO,OAQbM,QAAQC,IAAI,qBACZD,QAAQC,IAAIP,GACZM,QAAQC,IAAIP,EAASC,MAVR,kBAWND,EAASC,MAXH,2CAAH,wDAwBuCY,OAVvC,uCAAG,WAAOF,GAAP,iBAAAP,EAAA,6DACPV,EAAS,CACbC,QAAS,CAAEC,cAAeJ,IAFf,SAKUK,IAAMiB,OAAN,UAAgBvB,EAAhB,YAA2BoB,GAAMjB,GAL3C,OAKPM,EALO,OAMbM,QAAQC,IAAI,qBACZD,QAAQC,IAAIP,GAPC,2CAAH,uDCfGe,EA7BK,WAA4B,IAA3BC,EAA0B,uDAAlB,MAAOC,EAAW,uCAG7C,OAFAX,QAAQC,IAAI,sBACZD,QAAQC,IAAIS,GACLC,EAAOC,MACd,IAAK,WACH,MAAO,MACT,IAAK,WACH,MAAO,MACT,QACE,OAAOF,ICKEG,EAAkB,SAACC,GAG9B,OAFAd,QAAQC,IAAI,4BACZD,QAAQC,IAAIa,GACZ,uCAAO,WAAMC,GAAN,SAAAjB,EAAA,sDACLiB,EAAS,CACPH,KAAM,mBACNE,aAAcA,IAHX,2CAAP,uDAQWE,EAAmB,WAC9B,8CAAO,WAAMD,GAAN,SAAAjB,EAAA,sDACLiB,EAAS,CACPH,KAAM,sBAFH,2CAAP,uDAOaK,EAjCa,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIC,EAAW,uCAIlD,OAHAX,QAAQC,IAAI,8BACZD,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,EAAOG,cACZH,EAAOC,MACd,IAAK,mBACH,OAAOD,EAAOG,aAChB,IAAK,oBACH,MAAO,GACT,QACE,OAAOJ,ICYEQ,EAAU,SAACC,GACtB,8CAAO,WAAMJ,GAAN,eAAAjB,EAAA,sEACiBsB,EAAYxB,OAAOuB,GADpC,OACCtB,EADD,OAELkB,EFXF,uCAAO,WAAMA,GAAN,SAAAjB,EAAA,sDACLiB,EAAS,CACPH,KAAM,aAFH,2CAAP,uDEYEG,EAASF,EAAgB,eAAD,OAAgBhB,EAAQwB,MAAxB,aACxBC,YAAW,WACTP,EAASC,OACR,KACHD,EAAS,CACPH,KAAM,WACNf,YATG,2CAAP,uDAiDa0B,EArEK,WAAyB,IAAxBb,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACf,IAAK,WACH,OAAOF,EAAMc,OAAOb,EAAOd,SAC7B,IAAK,cACH,OAAOa,EAAMe,QAAO,SAAAC,GAAC,OAAIA,EAAErB,KAAOM,EAAON,MAC3C,IAAK,cACH,OAAOK,EAAMiB,KAAI,SAAAD,GAAC,OAChBA,EAAErB,KAAOM,EAAOiB,YAAYvB,GACxBqB,EACAf,EAAOiB,eAEf,IAAK,aACH,OAAOjB,EAAOhB,KAChB,QACE,OAAOe,ICRI,GAAEmB,MAPN,uCAAG,WAAMC,GAAN,eAAAhC,EAAA,sEACWP,IAAMQ,KAHf,aAG6B+B,GAD/B,cACNpC,EADM,OAEZM,QAAQC,IAAI,gBACZD,QAAQC,IAAIP,EAASC,MAHT,kBAILD,EAASC,MAJJ,2CAAH,uDCYEoC,EAAY,SAACD,GACxB,8CAAO,WAAMf,GAAN,eAAAjB,EAAA,sEACckC,EAAaH,MAAMC,GADjC,OACCG,EADD,OAELjC,QAAQC,IAAI,YACZD,QAAQC,IAAIgC,GAEZC,OAAOC,aAAaC,QAClB,oBACAC,KAAKC,UAAUL,IAGjBb,EAAYlB,SAAS+B,EAAK/C,OAC1Bc,QAAQC,IAAI,2BACZD,QAAQC,IAAI,mBACZc,EAAS,CACPH,KAAM,WACNqB,SAfG,4CAAP,uDAiCaM,EA/CY,WAA2B,IAA1B7B,EAAyB,uDAAjB,KAAMC,EAAW,uCACnD,OAAOA,EAAOC,MACd,IAAK,WAEL,IAAK,kBACH,OAAOD,EAAOsB,KAChB,IAAK,cACH,OAAO,KACT,QACE,OAAOvB,I,qBCPL8B,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACRC,EAAaC,aAAY,SAAAjC,GAAK,OAAIA,EAAMuB,QADrB,EAEKW,mBAAS,IAFd,mBAElBC,EAFkB,KAETC,EAFS,KAInBC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5C9B,EAAWmC,cAEXC,EAAmB,WACvBL,GAAYD,IAmCd7C,QAAQC,IAAI,+BACZD,QAAQC,IAAIwC,GACZzC,QAAQC,IAAIwC,EAAKR,MACjBjC,QAAQC,IAAIwC,EAAKR,KAAKmB,UACtBpD,QAAQC,IAAIyC,EAAWW,MACvB,IAAMC,EAAoB,CACxBC,WAAY,OACZC,MAAO,QACPR,QAASP,EAAKR,KAAKmB,WAAaV,EAAWW,KAAO,GAAK,QAGzD,OACE,qBAAIhD,GAAG,YAAYoD,MApBH,CAChBC,WAAY,GACZC,YAAa,EACbC,OAAQ,QACRC,YAAa,EACbC,aAAc,GAed,UACE,wBAAOL,MAAOV,EAAiBgB,UAAU,cAAzC,UACE,+BACGtB,EAAKpB,MADR,IACe,wBAAQ2C,QAASb,EAAjB,qBAEf,6BACGV,EAAKwB,YAGV,wBAAOR,MAAOR,EAAiBc,UAAU,UAAzC,UACE,+BACGtB,EAAKpB,MADR,IACe,wBAAQ2C,QAASb,EAAjB,qBAEf,6BACGV,EAAKyB,MAER,+BACGzB,EAAK0B,MADR,IACe,wBAAQ9D,GAAG,cAAc2D,QA7D9B,WACd,IAAIpC,EAAW,2BAAQa,GAAR,IAAc0B,MAAO1B,EAAK0B,MAAQ,IAC3C9D,EAAKuB,EAAYvB,UAChBuB,EAAYvB,GAanBU,EHiBsB,SAACI,EAAYd,GACrC,8CAAO,WAAMU,GAAN,eAAAjB,EAAA,sEACqBsB,EAAYhB,OAAOe,EAAYd,GADpD,OACCuB,EADD,OAELb,EAAS,CACPH,KAAM,cACNgB,gBAJG,2CAAP,sDGlBWwC,CAAWxC,EAAavB,KA6Cd,qBAEf,6BACGoC,EAAKwB,SAER,6BACE,wBAAQD,QAhDC,WACf9B,OAAOmC,QAAP,uBAA+B5B,EAAKpB,MAApC,gBAAiDoB,EAAKwB,OAAtD,OACgBxB,EAAKpC,IA8CYoD,MAAOH,EAAlC,6BA4BKgB,EApBD,WACZ,IAAMC,EAAQ5B,aAAY,SAAAjC,GAAK,OAAIA,EAAM6D,SACzC,OACE,8BACE,6BACGA,EACEC,MAAK,SAAC1E,EAAG4B,GAAJ,OACJA,EAAEyC,MAAQrE,EAAEqE,SAEbxC,KAAI,SAAAc,GAAI,OACP,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKpC,YCpEToE,EApCM,WAAuB,IAAtB/D,EAAqB,uDAAf,GAAIC,EAAW,uCACzC,OAAOA,EAAOC,MACd,IAAK,eACH,OAAO,2BAAMF,GAAb,IAAoBgE,SAAU/D,EAAO+D,WACvC,IAAK,eACH,OAAO,2BAAKhE,GAAZ,IAAmB0C,SAAUzC,EAAOyC,WACtC,IAAK,oBACH,MAAO,CACLA,SAAU,GACVsB,SAAU,IAEd,QACE,OAAOhE,IC8CIiE,EAnDG,WAChB,IAAM5D,EAAWmC,cACXE,EAAWT,aAAY,SAAAjC,GAAK,OAAIA,EAAMoB,YAAYsB,YAClDsB,EAAW/B,aAAY,SAAAjC,GAAK,OAAIA,EAAMoB,YAAY4C,YAElDE,EAAW,uCAAG,WAAOC,GAAP,SAAA/E,EAAA,sDAClB+E,EAAMC,iBACN9E,QAAQC,IAAR,0BAA+BmD,EAA/B,YAA2CsB,IAC3C,IACE3D,EAASgB,EAAU,CAAEqB,WAAUsB,cAC/B3D,EDcG,CACLH,KAAM,sBCdJ,MAAOmE,GACP/E,QAAQC,IAAI8E,GACZ/E,QAAQC,IAAI,kCACZc,EPEJ,uCAAO,WAAMA,GAAN,SAAAjB,EAAA,sDACLiB,EAAS,CACPH,KAAM,aAFH,2CAAP,uDODIG,EAASF,EAAgB,mCACzBS,YAAW,WACTP,EAASC,OACR,KAba,2CAAH,sDAiBjB,OACE,gCACE,sDACA,uBAAMX,GAAI,aAAc2E,SAAUJ,EAAlC,UACE,2CAEE,uBACEvE,GAAG,WACH4E,MAAO7B,EACPC,KAAK,WACL6B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpE,EDhBX,SAACqC,GAC1B,MAAQ,CACNxC,KAAM,eACNwC,YCa2CgC,CAAYD,EAAOF,cAG1D,2CAEE,uBACE5E,GAAG,WACHO,KAAK,WACLqE,MAAOP,EACPrB,KAAK,WACL6B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpE,EDjCX,SAAC2D,GAC1B,MAAQ,CACN9D,KAAM,eACN8D,YC8B2CW,CAAYF,EAAOF,cAG1D,wBAAQrE,KAAK,SAAb,0BCpBO0E,EA7BM,WACnBtF,QAAQC,IAAI,wBACZ,IAAMa,EAAe6B,aAAY,SAAAjC,GAAK,OAAIA,EAAMI,gBAC1CyE,EAAO5C,aAAY,SAAAjC,GAAK,OAAIA,EAAM6E,QAExCvF,QAAQC,IAAIa,GACZd,QAAQC,IAAIsF,GAEZ,IAQM9B,EAAQ,CACZD,MALqB,QAAT+B,EACV,QACA,MAIFhC,WAAY,YACZP,QAXkC,KAAjBlC,EACf,GACA,QAYJ,OACE,oBAAI2C,MAAOA,EAAX,SACG3C,KC0CQ0E,EAhEQ,WAErB,IAAMzE,EAAWmC,cAFU,EAIDN,mBAAS,IAJR,mBAIpBvB,EAJoB,KAIboE,EAJa,OAKC7C,mBAAS,IALV,mBAKpBqB,EALoB,KAKZyB,EALY,OAML9C,mBAAS,IANJ,mBAMpBsB,EANoB,KAMfyB,EANe,KAQrBC,EAAU,uCAAG,WAAOf,GAAP,eAAA/E,EAAA,sDAEjB+E,EAAMC,iBAEA3D,EAAa,CACjBE,MAAOA,EACP4C,OAAQA,EACRC,IAAKA,GAGPuB,EAAS,IACTC,EAAU,IACVC,EAAO,IAEP3F,QAAQC,IAAI,4BACZD,QAAQC,IAAIkB,GACZJ,EAASG,EAAQC,IAhBA,2CAAH,sDAmBhB,OACE,gCACE,4CACA,uBAAM6D,SAAUY,EAAYvF,GAAG,iBAA/B,UACE,wCAEE,uBACEA,GAAG,QACH4E,MAAO5D,EACPgC,KAAK,QACL6B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBM,EAASN,EAAOF,aAG9C,yCAEE,uBACE5E,GAAG,SACH4E,MAAOhB,EACPZ,KAAK,SACL6B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBO,EAAUP,EAAOF,aAG/C,sCAEE,uBACE5E,GAAG,MACH4E,MAAOf,EACPb,KAAK,MACL6B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBQ,EAAOR,EAAOF,aAG5C,wBAAQ5E,GAAG,gBAAgBO,KAAK,SAAhC,2BC5DFiF,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EACnBrD,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CM,EAAmB,WACvBL,GAAYD,IAOd,OAJAqD,8BAAoBD,GAAK,WACvB,MAAO,CAAE9C,uBAIT,gCACE,qBAAKM,MAAOV,EAAZ,SACE,wBAAQiB,QAASb,EAAjB,SAAoC6C,EAAMG,gBAE5C,sBAAK1C,MAAOR,EAAZ,UACG+C,EAAMI,SACP,wBAAQpC,QAASb,EAAjB,6BAMR0C,EAAUQ,YAAc,YAMTR,QCiDAS,EAxEH,WAGV,IAAMvF,EAAWmC,cACXjB,EAAOU,aAAY,SAAAjC,GAAK,OAAIA,EAAMuB,QAExCsE,qBAAU,WACRvG,QAAQC,IAAI,uBACZc,ETmBF,uCAAO,WAAMA,GAAN,eAAAjB,EAAA,sEACcsB,EAAYjC,SAD1B,OACCQ,EADD,OAELK,QAAQC,IAAI,sBACZD,QAAQC,IAAIN,GACZoB,EAAS,CACPH,KAAM,aACNjB,SANG,2CAAP,yDSlBG,CAACoB,IAEJwF,qBAAU,WACR,IAAMC,EAAiBtE,OAAOC,aAAasE,QAAQ,qBAInD,GAFAzG,QAAQC,IAAI,2BACZD,QAAQC,IAAIuG,GACRA,EAAgB,CAClB,IAAMvE,EAAOI,KAAKqE,MAAMF,GACxBxG,QAAQC,IAAI,uBACZD,QAAQC,IAAIgC,GACZlB,EPIuB,SAACkB,GAC5B,MAAO,CACLrB,KAAM,kBACNqB,QOPW0E,CAAc1E,IACvBb,EAAYlB,SAAS+B,EAAK/C,UAE3B,CAAC6B,IAGJ,IAcM6F,EAAcC,mBAUpB,OAFA7G,QAAQC,IAAI,kBACZD,QAAQC,IAAIgC,GAEV,gCACE,yCACA,cAAC,EAAD,IACU,OAATA,EAnBH,cAAC,EAAD,CAAWkE,YAAY,QAAvB,SACE,cAAC,EAAD,MAoBI,gCACA,8BACGlE,EAAKoB,KADR,gBAEE,wBAAQW,QAjCG,SAACa,GACpBA,EAAMC,iBACN5C,OAAOC,aAAa2E,WAAW,qBAC/B/F,EPGK,CACLH,KAAM,iBO0BE,wBAIF,uCApBN,cAAC,EAAD,CAAWuF,YAAY,WAAWF,IAAKW,EAAvC,SACE,cAAC,EAAD,MAqBI,cAAC,EAAD,W,+BCrEJG,EAAUC,0BAAgB,CAC9BlG,aAAcG,EACdsE,KAAM9E,EACNqB,YAAa2C,EACbxC,KAAMM,EACNgC,MAAOhD,IAUM0F,EAPDC,sBACZH,EACAI,8BACEC,0BAAgBC,OCbpBC,IACGC,OACC,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEDO,SAASC,eAAe,W","file":"static/js/main.a7724900.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = axios.get(baseUrl, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst change = async (newBlog, id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  console.log(newBlog)\r\n\r\n  const response = await axios.put(`${baseUrl}/${id}`, newBlog, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n}\r\n\r\nexport default { getAll, create, setToken, change, remove }","\r\nconst toneReducer = (state = 'pos', action) => {\r\n  console.log('the tone state is:')\r\n  console.log(state)\r\n  switch(action.type) {\r\n  case 'POS_TONE':\r\n    return 'pos'\r\n  case 'NEG_TONE':\r\n    return 'neg'\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const changeToneToPos = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'POS_TONE'\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeToneToNeg = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEG_TONE'\r\n    })\r\n  }\r\n}\r\n\r\nexport default toneReducer","\r\nconst notificationReducer = (state = '', action) => {\r\n  console.log('the notification state is:')\r\n  console.log(state)\r\n  console.log(action.notification)\r\n  switch(action.type) {\r\n  case 'ADD_NOTIFICATION':\r\n    return action.notification\r\n  case 'DROP_NOTIFICATION':\r\n    return ''\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addNotification = (notification) => {\r\n  console.log('notification to be added')\r\n  console.log(notification)\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'ADD_NOTIFICATION',\r\n      notification: notification\r\n    })\r\n  }\r\n}\r\n\r\nexport const dropNotification = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'DROP_NOTIFICATION'\r\n    })\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import blogService from '../services/blogs'\r\nimport { changeToneToPos } from '../reducers/toneReducer'\r\nimport { addNotification, dropNotification } from '../reducers/notificationReducer'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'ADD_BLOG':\r\n    return state.concat(action.newBlog)\r\n  case 'REMOVE_BLOG':\r\n    return state.filter(b => b.id !== action.id)\r\n  case 'CHANGE_BLOG':\r\n    return state.map(b =>\r\n      b.id !== action.changedBlog.id\r\n        ? b\r\n        : action.changedBlog\r\n    )\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addBlog = (blogObject) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(blogObject)\r\n    dispatch(changeToneToPos())\r\n    dispatch(addNotification(`A new blog \"${newBlog.title}\" added`))\r\n    setTimeout(() => {\r\n      dispatch(dropNotification())\r\n    }, 5000)\r\n    dispatch({\r\n      type: 'ADD_BLOG',\r\n      newBlog\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const initBlogs = () => {\r\n  return async dispatch => {\r\n    const data = await blogService.getAll()\r\n    console.log('Palautuuko dataa??')\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeBlog = (blogObject, id) => {\r\n  return async dispatch => {\r\n    const changedBlog = await blogService.change(blogObject, id)\r\n    dispatch({\r\n      type: 'CHANGE_BLOG',\r\n      changedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeBlog = (id) => {\r\n  return async dispatch => {\r\n    await blogService.remove(id)\r\n    dispatch({\r\n      type: 'REMOVE_BLOG',\r\n      id\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default blogReducer","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  console.log('BODY IS HERE')\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nconst currentUserReducer = (state = null, action) => {\r\n  switch(action.type) {\r\n  case 'ADD_USER':\r\n    return action.user\r\n  case 'ADD_LOGGED_USER':\r\n    return action.user\r\n  case 'REMOVE_USER':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (credentials) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login(credentials)\r\n    console.log('UUUUSERI')\r\n    console.log(user)\r\n\r\n    window.localStorage.setItem(\r\n      'loggedBlogAppUser',\r\n      JSON.stringify(user)\r\n    )\r\n\r\n    blogService.setToken(user.token)\r\n    console.log('tokenin asetus onnistuu')\r\n    console.log('kaikki onnistuu')\r\n    dispatch({\r\n      type: 'ADD_USER',\r\n      user\r\n    })\r\n  }\r\n}\r\n\r\nexport const addLoggedUser = (user) => {\r\n  return {\r\n    type: 'ADD_LOGGED_USER',\r\n    user\r\n  }\r\n}\r\n\r\nexport const removeLoggedUser = () => {\r\n  return {\r\n    type: 'REMOVE_USER'\r\n  }\r\n}\r\n\r\nexport default currentUserReducer","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeBlog, removeBlog } from '../reducers/blogReducer'\r\n\r\n\r\nconst Blog = ({ blog }) => {\r\n  const loggedUser = useSelector(state => state.user)\r\n  const [visible, setVisible] = useState('')\r\n\r\n  const showWhenVisible = { display: visible ? 'none' : '' }\r\n  const hideWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const addLike = () => {\r\n    let changedBlog = { ...blog, likes: blog.likes + 1 }\r\n    const id = changedBlog.id\r\n    delete changedBlog.id\r\n\r\n\r\n    /*\r\n    const changedBlog = {\r\n      user: blog.user.id,\r\n      likes: blog.likes + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url,\r\n    }\r\n    */\r\n\r\n    dispatch(changeBlog(changedBlog, id))\r\n  }\r\n\r\n  const dropBlog = () => {\r\n    window.confirm(`Remove blog \"${blog.title}\" by ${blog.author}?`)\r\n      && removeBlog(blog.id)\r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  console.log('Käyttäjät BLOGissa')\r\n  console.log(blog)\r\n  console.log(blog.user)\r\n  console.log(blog.user.username)\r\n  console.log(loggedUser.name)\r\n  const removeButtonStyle = {\r\n    background: 'blue',\r\n    color: 'white',\r\n    display: blog.user.username === loggedUser.name ? '' : 'none'\r\n  }\r\n\r\n  return (\r\n    <li id='blog-info' style={blogStyle}>\r\n      <table style={showWhenVisible} className='defaultView'>\r\n        <tr>\r\n          {blog.title} <button onClick={toggleVisibility}>view</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.author}\r\n        </tr>\r\n      </table>\r\n      <table style={hideWhenVisible} className='allView'>\r\n        <tr>\r\n          {blog.title} <button onClick={toggleVisibility}>view</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.url}\r\n        </tr>\r\n        <tr>\r\n          {blog.likes} <button id='like-button' onClick={addLike}>like</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.author}\r\n        </tr>\r\n        <tr>\r\n          <button onClick={dropBlog} style={removeButtonStyle}>remove</button>\r\n        </tr>\r\n      </table>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\nconst Blogs = () => {\r\n  const blogs = useSelector(state => state.blogs)\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {blogs\r\n          .sort((a, b) => (\r\n            b.likes - a.likes\r\n          ))\r\n          .map(blog =>\r\n            <Blog\r\n              key={blog.id}\r\n              blog={blog}\r\n            />\r\n          )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","const loginReducer = (state={}, action) => {\r\n  switch(action.type) {\r\n  case 'ADD_PASSWORD':\r\n    return  { ...state, password: action.password }\r\n  case 'ADD_USERNAME':\r\n    return { ...state, username: action.username }\r\n  case 'RESET_CREDENTIALS':\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addPassword = (password) => {\r\n  return ({\r\n    type: 'ADD_PASSWORD',\r\n    password\r\n  })\r\n}\r\n\r\nexport const addUsername = (username) => {\r\n  return ({\r\n    type: 'ADD_USERNAME',\r\n    username\r\n  })\r\n}\r\n\r\nexport const resetCredentials = () => {\r\n  return {\r\n    type: 'RESET_CREDENTIALS'\r\n  }\r\n}\r\n\r\nexport default loginReducer","import React from 'react'\r\nimport { addUsername, addPassword, resetCredentials } from '../reducers/loginReducer'\r\nimport { changeToneToNeg } from '../reducers/toneReducer'\r\nimport { addNotification, dropNotification } from '../reducers/notificationReducer'\r\nimport { loginUser } from '../reducers/currentUserReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n  const username = useSelector(state => state.credentials.username)\r\n  const password = useSelector(state => state.credentials.password)\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log(`logging in with ${username} ${password}`)\r\n    try {\r\n      dispatch(loginUser({ username, password }))\r\n      dispatch(resetCredentials())\r\n    } catch (exception) {\r\n      console.log(exception)\r\n      console.log('missing or invalid credentials')\r\n      dispatch(changeToneToNeg())\r\n      dispatch(addNotification('missing or invalid credentials'))\r\n      setTimeout(()  => {\r\n        dispatch(dropNotification(''))\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login to application</h2>\r\n      <form id={'login-form'} onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => dispatch(addUsername(target.value))}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Username\"\r\n            onChange={({ target }) => dispatch(addPassword(target.value))}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  console.log('in notification comp')\r\n  const notification = useSelector(state => state.notification)\r\n  const tone = useSelector(state => state.tone)\r\n\r\n  console.log(notification)\r\n  console.log(tone)\r\n\r\n  const visibility = notification !== ''\r\n    ? ''\r\n    : 'none'\r\n\r\n  const color = tone === 'pos'\r\n    ? 'green'\r\n    : 'red'\r\n\r\n  const style = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    display: visibility\r\n  }\r\n\r\n  return (\r\n    <h2 style={style}>\r\n      {notification}\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\nimport { addBlog } from '../reducers/blogReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nconst CreateBlogForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const createBlog = async (event) => {\r\n    //blogFormRef.current.toggleVisibility()\r\n    event.preventDefault()\r\n\r\n    const blogObject = {\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    }\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n\r\n    console.log('LISÄTTÄVÄ BLOGI')\r\n    console.log(blogObject)\r\n    dispatch(addBlog(blogObject))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={createBlog} id='createBlogForm'>\r\n        <div>\r\n          title\r\n          <input\r\n            id=\"title\"\r\n            value={title}\r\n            name=\"title\"\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author\r\n          <input\r\n            id=\"author\"\r\n            value={author}\r\n            name=\"author\"\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url\r\n          <input\r\n            id=\"url\"\r\n            value={url}\r\n            name=\"url\"\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <button id='create-button' type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateBlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showWhenVisible = { display: visible ? 'none' : '' }\r\n  const hideWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return { toggleVisibility }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initBlogs } from './reducers/blogReducer'\r\nimport { addLoggedUser, removeLoggedUser } from './reducers/currentUserReducer'\r\nimport Blogs from './components/Blogs'\r\n//import BlogForm from './components/BlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport CreateBlogForm from './components/CreateBlogForm'\r\n\r\nimport blogService from './services/blogs'\r\nimport Togglable from './components/Togglable'\r\n\r\nconst App = () => {\r\n  //const [user, setUser] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing blogs!')\r\n    dispatch(initBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    //const user = useSelector(state => state.user)\r\n    console.log('tulostuuko tämä??')\r\n    console.log(loggedUserJSON)\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      console.log('tämä tulostuu')\r\n      console.log(user)\r\n      dispatch(addLoggedUser(user))\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [dispatch])\r\n\r\n\r\n  const handleLogOut = (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    dispatch(removeLoggedUser())\r\n  }\r\n\r\n\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel='Login'>\r\n      <LoginForm />\r\n    </Togglable>\r\n  )\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  const createBlogForm = () => (\r\n    <Togglable buttonLabel='New blog' ref={blogFormRef}>\r\n      <CreateBlogForm/>\r\n    </Togglable>\r\n  )\r\n\r\n  console.log('UUUUSSSERRRIII')\r\n  console.log(user)\r\n  return (\r\n    <div>\r\n      <h1>BlogApp</h1>\r\n      <Notification />\r\n      {user === null\r\n        ? loginForm()\r\n        : <div>\r\n          <p>\r\n            {user.name} is logged in\r\n            <button onClick={handleLogOut}>\r\n              Log out\r\n            </button>\r\n          </p>\r\n          <h2>blogs</h2>\r\n          {createBlogForm()}\r\n          <Blogs />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n/*\r\n<BlogForm\r\n          addBlog={addBlog}\r\n          newBlog={newBlog}\r\n          handleBlogChange={handleBlogChange}\r\n        />\r\n        */","import { createStore, applyMiddleware, combineReducers  } from 'redux'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport toneReducer from './reducers/toneReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport currentUserReducer from './reducers/currentUserReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport blogReducer from './reducers/blogReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  tone: toneReducer,\r\n  credentials: loginReducer,\r\n  user: currentUserReducer,\r\n  blogs: blogReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM\r\n  .render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,document.getElementById('root')\r\n  )"],"sourceRoot":""}