{"version":3,"sources":["components/Blog.js","components/LoginForm.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","LoginForm","handleLogin","username","password","setUsername","setPassword","onSubmit","type","value","name","onChange","target","token","getAll","config","headers","Authorization","axios","get","then","response","data","login","credentials","a","post","console","log","body","App","useState","blogs","setBlogs","user","setUser","useEffect","blogService","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","setToken","map","id","ReactDOM","render","document","getElementById"],"mappings":"qMAOeA,EANF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACX,gCACGA,EAAKC,MADR,IACgBD,EAAKE,WCyBRC,EA1BG,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACjE,OACI,uBAAMC,SAAUL,EAAhB,UACE,2CAEI,uBACEM,KAAK,OACLC,MAAON,EACPO,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAYO,EAAOH,aAGnD,2CAEI,uBACED,KAAK,WACLC,MAAOL,EACPM,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAYM,EAAOH,aAGnD,wBAAQD,KAAK,SAAb,uB,gBCpBJK,EAAQ,KAgBG,GAAEC,OAVF,WAEf,IAAMC,EAAS,CACXC,QAAS,CAAEC,cAAeJ,IAI5B,OADgBK,IAAMC,IAdR,aAcqBJ,GACpBK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCN5B,GAAEC,MANN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACWP,IAAMQ,KAHf,aAG6BF,GAD/B,cACNH,EADM,OAEZM,QAAQC,IAAI,gBAFA,kBAGLP,EAASQ,MAHJ,2CAAH,uDCqEIC,EAlEH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,gCAGgBA,mBAAS,KAHzB,mBAGT5B,EAHS,KAGCE,EAHD,OAIgB0B,mBAAS,IAJzB,mBAIT3B,EAJS,KAICE,EAJD,OAKQyB,mBAAS,MALjB,mBAKTG,EALS,KAKHC,EALG,KAOhBC,qBAAU,WACRC,EAAYvB,SAASM,MAAK,SAAAY,GAAK,OAC7BC,EAAUD,QAEX,IAEH,IAAM9B,EAAW,uCAAG,WAAOoC,GAAP,eAAAb,EAAA,6DAClBa,EAAMC,iBACNZ,QAAQC,IAAR,0BAA+BzB,EAA/B,YAA2CC,IAFzB,kBAIGoC,EAAajB,MAAM,CAAEpB,WAAUC,aAJlC,OAIV8B,EAJU,OAKhBP,QAAQC,IAAI,YACZD,QAAQC,IAAIM,GAEZO,OAAOC,aAAaC,QAClB,cACAC,KAAKC,UAAUX,IAGjBG,EAAYS,SAASZ,EAAKrB,OAC1BsB,EAAQD,GACR7B,EAAY,IACZC,EAAY,IAhBI,kDAkBhBqB,QAAQC,IAAI,kCAlBI,0DAAH,sDA+BjB,OACE,gCACE,yCACU,OAATM,EACC,cAAC,EAAD,CACEhC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,YAAaA,IAEf,gCACE,uCACC0B,EAAMe,KAAI,SAAAjD,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKkD,cC7D5BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.69be456a.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({blog}) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>  \r\n)\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst LoginForm = ({ handleLogin, username, password, setUsername, setPassword }) => {\r\n  return (\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              name=\"Username\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          password\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              name=\"Username\"\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n\r\nconst config = {\r\n    headers: { Authorization: token },\r\n}\r\n\r\n  const request = axios.get(baseUrl, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll }","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  console.log('BODY IS HERE')\r\n  return response.body\r\n}\r\n\r\nexport default { login }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport BlogForm from './components/BlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [newBlog, setNewBlog] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log(`logging in with ${username} ${password}`)\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n      console.log('UUUUSERI')\r\n      console.log(user)\r\n\r\n      window.localStorage.setItem(\r\n        'blogAppUser', \r\n        JSON.stringify(user)\r\n        )\r\n\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      console.log('missing or invalid credentials')\r\n\r\n    }\r\n  }\r\n  const addBlog = async () => {\r\n    return null\r\n  }\r\n\r\n  const handleBlogChange = () => {\r\n    return null\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>BlogApp</h1>\r\n      {user === null\r\n      ? <LoginForm\r\n          handleLogin={handleLogin}\r\n          username={username}\r\n          password={password}\r\n          setUsername={setUsername}\r\n          setPassword={setPassword}\r\n        />\r\n      : <div>\r\n          <h2>blogs</h2> \r\n          {blogs.map(blog =>\r\n            <Blog key={blog.id} blog={blog} />\r\n          )}\r\n        </div>\r\n      } \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n/*\r\n<BlogForm\r\n          addBlog={addBlog}\r\n          newBlog={newBlog}\r\n          handleBlogChange={handleBlogChange}\r\n        />\r\n        */","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}