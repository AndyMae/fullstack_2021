{"version":3,"sources":["services/blogs.js","reducers/toneReducer.js","reducers/notificationReducer.js","reducers/blogReducer.js","services/login.js","reducers/currentUserReducer.js","components/Blogs.js","reducers/loginReducer.js","components/LoginForm.js","components/Notification.js","components/Togglable.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","config","headers","Authorization","axios","get","then","response","data","create","newBlog","a","post","console","log","setToken","newToken","change","put","id","remove","delete","toneReducer","state","action","type","addNotification","notification","dispatch","dropNotification","notificationReducer","blogReducer","concat","filter","b","map","changedBlog","login","credentials","loginUser","loginService","user","window","localStorage","setItem","JSON","stringify","blogService","currentUserReducer","Blog","blog","loggedUser","useState","visible","setVisible","showWhenVisible","display","hideWhenVisible","toggleVisibility","username","name","removeButtonStyle","background","color","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","onClick","author","url","likes","confirm","Blogs","blogs","sort","loginReducer","password","LoginForm","useDispatch","useSelector","handleLogin","event","preventDefault","exception","setTimeout","onSubmit","value","onChange","target","addUsername","addPassword","Notification","tone","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","App","useEffect","loggedUserJSON","getItem","parse","addLoggedUser","removeItem","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5256dfc6.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const request = axios.get(baseUrl, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst change = async (newBlog) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  console.log(newBlog)\r\n\r\n  const response = await axios.put(`${baseUrl}/${newBlog.id}`, newBlog, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  console.log('response in axios')\r\n  console.log(response)\r\n}\r\n\r\nexport default { getAll, create, setToken, change, remove }","\r\nconst toneReducer = (state = 'pos', action) => {\r\n  console.log('the tone state is:')\r\n  console.log(state)\r\n  switch(action.type) {\r\n  case 'POS_TONE':\r\n    return 'pos'\r\n  case 'NEG_TONE':\r\n    return 'neg'\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const changeToneToPos = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'POS_TONE'\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeToneToNeg = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEG_TONE'\r\n    })\r\n  }\r\n}\r\n\r\nexport default toneReducer","\r\nconst notificationReducer = (state = '', action) => {\r\n  console.log('the notification state is:')\r\n  console.log(state)\r\n  console.log(action.notification)\r\n  switch(action.type) {\r\n  case 'ADD_NOTIFICATION':\r\n    return action.notification\r\n  case 'DROP_NOTIFICATION':\r\n    return ''\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addNotification = (notification) => {\r\n  console.log('notification to be added')\r\n  console.log(notification)\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'ADD_NOTIFICATION',\r\n      notification: notification\r\n    })\r\n  }\r\n}\r\n\r\nexport const dropNotification = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'DROP_NOTIFICATION'\r\n    })\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import blogService from '../services/blogs'\r\nimport { changeToneToPos } from '../reducers/toneReducer'\r\nimport { addNotification, dropNotification } from '../reducers/notificationReducer'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'ADD_BLOG':\r\n    return state.concat(action.newBlog)\r\n  case 'REMOVE_BLOG':\r\n    return state.filter(b => b.id !== action.id)\r\n  case 'CHANGE_BLOG':\r\n    return state.map(b =>\r\n      b.id !== action.changedBlog.id\r\n        ? b\r\n        : action.changedBlog\r\n    )\r\n  case 'INIT_BLOGS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addBlog = (blogObject) => {\r\n  return async dispatch => {\r\n    const newBlog = await blogService.create(blogObject)\r\n    dispatch(changeToneToPos())\r\n    dispatch(addNotification(`A new blog \"${newBlog.title}\" added`))\r\n    setTimeout(() => {\r\n      dispatch(dropNotification())\r\n    }, 5000)\r\n    dispatch({\r\n      type: 'ADD_BLOG',\r\n      newBlog\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const initBlogs = () => {\r\n  return async dispatch => {\r\n    const data = await blogService.getAll()\r\n    console.log('Palautuuko dataa??')\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      data\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeBlog = (blogObject) => {\r\n  return async dispatch => {\r\n    const changedBlog = await blogService.change(blogObject)\r\n    dispatch({\r\n      type: 'CHANGE_BLOG',\r\n      changedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeBlog = (id) => {\r\n  return async dispatch => {\r\n    await blogService.remove(id)\r\n    dispatch({\r\n      type: 'REMOVE_BLOG',\r\n      id\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default blogReducer","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  console.log('BODY IS HERE')\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import loginService from '../services/login'\r\nimport blogService from '../services/blogs'\r\n\r\nconst currentUserReducer = (state = null, action) => {\r\n  switch(action.type) {\r\n  case 'ADD_USER':\r\n    return action.user\r\n  case 'ADD_LOGGED_USER':\r\n    return action.user\r\n  case 'REMOVE_USER':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const loginUser = (credentials) => {\r\n  return async dispatch => {\r\n    const user = await loginService.login(credentials)\r\n    console.log('UUUUSERI')\r\n    console.log(user)\r\n\r\n    window.localStorage.setItem(\r\n      'loggedBlogAppUser',\r\n      JSON.stringify(user)\r\n    )\r\n\r\n    blogService.setToken(user.token)\r\n    console.log('tokenin asetus onnistuu')\r\n    console.log('kaikki onnistuu')\r\n    dispatch({\r\n      type: 'ADD_USER',\r\n      user\r\n    })\r\n  }\r\n}\r\n\r\nexport const addLoggedUser = (user) => {\r\n  return {\r\n    type: 'ADD_LOGGED_USER',\r\n    user\r\n  }\r\n}\r\n\r\nexport const removeLoggedUser = () => {\r\n  return {\r\n    type: 'REMOVE_USER'\r\n  }\r\n}\r\n\r\nexport default currentUserReducer","import React, { useState } from 'react'\r\nimport { changeBlog, removeBlog } from '../reducers/blogReducer'\r\n\r\n\r\nconst Blog = ({ blog }) => {\r\n  const loggedUser = useState(state => state.user)\r\n  const [visible, setVisible] = useState('')\r\n\r\n  const showWhenVisible = { display: visible ? 'none' : '' }\r\n  const hideWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const addLike = () => {\r\n    //const changedBlog = { ...blog, likes: blog.likes + 1 }\r\n    const changedBlog = {\r\n      user: blog.user.id,\r\n      likes: blog.likes + 1,\r\n      author: blog.author,\r\n      title: blog.title,\r\n      url: blog.url,\r\n    }\r\n    changeBlog(changedBlog, blog.id)\r\n    console.log(changedBlog)\r\n  }\r\n\r\n  const dropBlog = () => {\r\n    window.confirm(`Remove blog \"${blog.title}\" by ${blog.author}?`)\r\n      && removeBlog(blog.id)\r\n  }\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  console.log('Käyttäjät BLOGissa')\r\n  console.log(blog)\r\n  console.log(blog.user)\r\n  console.log(blog.user.username)\r\n  console.log(loggedUser.name)\r\n  const removeButtonStyle = {\r\n    background: 'blue',\r\n    color: 'white',\r\n    display: blog.user.username === loggedUser.name ? '' : 'none'\r\n  }\r\n\r\n  return (\r\n    <li id='blog-info' style={blogStyle}>\r\n      <table style={showWhenVisible} className='defaultView'>\r\n        <tr>\r\n          {blog.title} <button onClick={toggleVisibility}>view</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.author}\r\n        </tr>\r\n      </table>\r\n      <table style={hideWhenVisible} className='allView'>\r\n        <tr>\r\n          {blog.title} <button onClick={toggleVisibility}>view</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.url}\r\n        </tr>\r\n        <tr>\r\n          {blog.likes} <button id='like-button' onClick={addLike}>like</button>\r\n        </tr>\r\n        <tr>\r\n          {blog.author}\r\n        </tr>\r\n        <tr>\r\n          <button onClick={dropBlog} style={removeButtonStyle}>remove</button>\r\n        </tr>\r\n      </table>\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\nconst Blogs = () => {\r\n  const blogs = useState(state => state.blogs)\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <ul>\r\n        {blogs\r\n          .sort((a, b) => (\r\n            b.likes - a.likes\r\n          ))\r\n          .map(blog =>\r\n            <Blog\r\n              key={blog.id}\r\n              blog={blog}\r\n            />\r\n          )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogs","const loginReducer = (state={}, action) => {\r\n  switch(action.type) {\r\n  case 'ADD_PASSWORD':\r\n    return  { ...state, password: action.password }\r\n  case 'ADD_USERNAME':\r\n    return { ...state, username: action.username }\r\n  case 'RESET_CREDENTIALS':\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const addPassword = (password) => {\r\n  return ({\r\n    type: 'ADD_PASSWORD',\r\n    password\r\n  })\r\n}\r\n\r\nexport const addUsername = (username) => {\r\n  return ({\r\n    type: 'ADD_USERNAME',\r\n    username\r\n  })\r\n}\r\n\r\nexport const resetCredentials = () => {\r\n  return {\r\n    type: 'RESET_CREDENTIALS'\r\n  }\r\n}\r\n\r\nexport default loginReducer","import React from 'react'\r\nimport { addUsername, addPassword, resetCredentials } from '../reducers/loginReducer'\r\nimport { changeToneToNeg } from '../reducers/toneReducer'\r\nimport { addNotification, dropNotification } from '../reducers/notificationReducer'\r\nimport { loginUser } from '../reducers/currentUserReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch()\r\n  const username = useSelector(state => state.credentials.username)\r\n  const password = useSelector(state => state.credentials.password)\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log(`logging in with ${username} ${password}`)\r\n    try {\r\n      dispatch(loginUser({ username, password }))\r\n      dispatch(resetCredentials())\r\n    } catch (exception) {\r\n      console.log(exception)\r\n      console.log('missing or invalid credentials')\r\n      dispatch(changeToneToNeg())\r\n      dispatch(addNotification('missing or invalid credentials'))\r\n      setTimeout(()  => {\r\n        dispatch(dropNotification(''))\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login to application</h2>\r\n      <form id={'login-form'} onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            id='username'\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => dispatch(addUsername(target.value))}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            id='password'\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Username\"\r\n            onChange={({ target }) => dispatch(addPassword(target.value))}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  console.log('in notification comp')\r\n  const notification = useSelector(state => state.notification)\r\n  const tone = useSelector(state => state.tone)\r\n\r\n  console.log(notification)\r\n  console.log(tone)\r\n\r\n  const visibility = notification !== ''\r\n    ? ''\r\n    : 'none'\r\n\r\n  const color = tone === 'pos'\r\n    ? 'green'\r\n    : 'red'\r\n\r\n  const style = {\r\n    color: color,\r\n    background: 'lightgrey',\r\n    display: visibility\r\n  }\r\n\r\n  return (\r\n    <h2 style={style}>\r\n      {notification}\r\n    </h2>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showWhenVisible = { display: visible ? 'none' : '' }\r\n  const hideWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return { toggleVisibility }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={showWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={hideWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initBlogs } from './reducers/blogReducer'\r\nimport { addLoggedUser, removeLoggedUser } from './reducers/currentUserReducer'\r\nimport Blogs from './components/Blogs'\r\n//import BlogForm from './components/BlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\n//import CreateBlogForm from './components/CreateBlogForm'\r\n\r\nimport blogService from './services/blogs'\r\nimport Togglable from './components/Togglable'\r\n\r\nconst App = () => {\r\n  //const [user, setUser] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n\r\n  useEffect(() => {\r\n    console.log('Initializing blogs!')\r\n    dispatch(initBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    //const user = useSelector(state => state.user)\r\n    console.log('tulostuuko tämä??')\r\n    console.log(loggedUserJSON)\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      console.log('tämä tulostuu')\r\n      console.log(user)\r\n      dispatch(addLoggedUser(user))\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [dispatch])\r\n\r\n\r\n  const handleLogOut = (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    dispatch(removeLoggedUser())\r\n  }\r\n\r\n\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel='Login'>\r\n      <LoginForm />\r\n    </Togglable>\r\n  )\r\n\r\n  //const blogFormRef = useRef()\r\n\r\n  /*\r\n  const createBlogForm = () => (\r\n    <Togglable buttonLabel='New blog' ref={blogFormRef}>\r\n      <CreateBlogForm/>\r\n    </Togglable>\r\n  )\r\n  */\r\n\r\n  console.log('UUUUSSSERRRIII')\r\n  console.log(user)\r\n  return (\r\n    <div>\r\n      <h1>BlogApp</h1>\r\n      <Notification />\r\n      {user === null\r\n        ? loginForm()\r\n        : <div>\r\n          <p>\r\n            {user.name} is logged in\r\n            <button onClick={handleLogOut}>\r\n              Log out\r\n            </button>\r\n          </p>\r\n          <Blogs />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n/*\r\n<BlogForm\r\n          addBlog={addBlog}\r\n          newBlog={newBlog}\r\n          handleBlogChange={handleBlogChange}\r\n        />\r\n        */","import { createStore, applyMiddleware, combineReducers  } from 'redux'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport toneReducer from './reducers/toneReducer'\r\nimport loginReducer from './reducers/loginReducer'\r\nimport currentUserReducer from './reducers/currentUserReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport blogReducer from './reducers/blogReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  tone: toneReducer,\r\n  credentials: loginReducer,\r\n  user: currentUserReducer,\r\n  blogs: blogReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM\r\n  .render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,document.getElementById('root')\r\n  )"],"sourceRoot":""}